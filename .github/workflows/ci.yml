name: CI

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

env:
  CARGO_TERM_COLOR: always

jobs:
  rustfmt-clippy:
    name: Formatting and Clippy
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Get Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
          components: rustfmt, clippy

      - name: Retrieve cache
        uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          # TO PURGE CACHE: increment this ↓↓↓ number
          key: Linux-stable-rustmft-clippy-V3-${{ hashFiles('**/Cargo.lock') }}

      - name: Check formatting
        if: always()
        run: cargo fmt --all -- --check

      - name: Install alsa and udev
        run: sudo apt-get update; sudo apt-get install --no-install-recommends libasound2-dev libudev-dev

      - name: Clippy
        if: always()
        run: cargo clippy --workspace --all-targets --all-features -- --no-deps -D warnings -A clippy::type_complexity -A clippy::manual-strip -A dead-code

  build:
    name: Build and test
    strategy:
      matrix:
        toolchain: [stable, beta]
        os: [windows-latest, ubuntu-latest, macos-latest]
        exclude:
          - os: macos-latest
            toolchain: beta
          - os: windows-latest
            toolchain: beta
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Get Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: ${{ matrix.toolchain }}
          override: true

      - name: Retrieve cache
        uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          ####### TO PURGE CACHE: increment this number ↓↓↓
          key: ${{ runner.os }}-${{ matrix.toolchain }}-V3-${{ hashFiles('**/Cargo.lock') }}

      - name: Install alsa and udev (if Linux)
        run: sudo apt-get update; sudo apt-get install --no-install-recommends libasound2-dev libudev-dev
        if: runner.os == 'linux'

      - name: Build
        run: cargo build --workspace --all-targets --all-features
        env:
          CARGO_INCREMENTAL: 0
          RUSTFLAGS: "-C debuginfo=0 -D warnings -A dead-code"

      - name: Test
        run: cargo test --workspace --all-targets --all-features
        env:
          CARGO_INCREMENTAL: 0
          RUSTFLAGS: "-C debuginfo=0 -D warnings -A dead-code"